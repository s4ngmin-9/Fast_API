● orjson

orjson은 파이썬에서 JSON 데이터를 처리하는 데 특화된 고성능 라이브러리입니다.
파이썬의 표준 json 모듈보다 훨씬 빠른 속도로 동작하는 것이 가장 큰 특징입니다.
특히 대량의 JSON 데이터를 다루는 API 서버(예: FastAPI 서버)에서 직렬화와 역직렬화
성능을 극대화하여 전체 애플리케이션의 응답 시간을 단축시키는 데 사용됩니다.
--------------------------------------------------------------------------------
● Frozen (불변)

Frozen은 객체의 속성 값이 한 번 할당되면 변경할 수 없도록 만드는 기능입니다.
파이썬의 dataclasses나 pydantic 라이브러리에서 frozen=True 옵션을 설정하여 사용합니다.
불변 객체를 사용하면 코드가 예상치 않게 변경되는 것을 방지하여 안정성을 높일 수 있습니다.
예를 들어, 애플리케이션의 환경 설정을 담은 객체를 frozen으로 만들면,
실행 중에 설정값이 실수로 바뀌는 일을 막을 수 있습니다.
--------------------------------------------------------------------------------
● Decorator (데코레이터)

데코레이터는 기존 함수의 기능에 추가적인 로직을 더하는 파이썬의 디자인 패턴입니다.
@ 기호를 사용하여 함수 위에 선언하며, 함수를 감싸는(wrap) 함수라고 생각할 수 있습니다.
데코레이터는 반복적이고 공통적인 작업을 함수마다 따로 구현할 필요 없이 재사용할 수 있게
해줍니다.

예시: FastAPI의 @app.get("/")와 같은 라우터 데코레이터는 해당 함수가 특정 URL("/")의
GET 요청을 처리하도록 기능을 추가해 줍니다. 그 외에도 사용자 인증, 로그 기록,
권한 확인 등의 기능을 데코레이터로 구현할 수 있습니다.
--------------------------------------------------------------------------------
● Final
Final은 타입 힌트(type hint)의 한 종류로, 특정 변수나 클래스, 메서드를 더 이상
변경할 수 없다는 것을 명시적으로 선언합니다.

- 변수: Final로 선언된 변수는 처음 할당된 후 값을 다시 변경할 수 없게 됩니다.

- 클래스: 클래스에 Final을 사용하면 다른 클래스가 해당 클래스를 상속 할 수 없도록 막습니다.

- 메서드: 메서드에 Final을 사용하면 자식 클래스에서 해당 메서드를
오버라이딩 할 수 없도록 막습니다. 이러한 기능은 코드의 의도를 명확히 하고,
잠재적인 버그를 줄이며, 프로그램의 구조를 견고하게 만드는 데 도움이 됩니다.
--------------------------------------------------------------------------------
● 디버깅 (Debugging)
디버깅은 프로그램 코드의 논리적인 오류(버그)를 찾아내고 수정하는 과정입니다.
프린트문을 사용해 변수를 출력하는 간단한 방법부터, 파이참과 같은
통합 개발 환경의 강력한 디버거를 활용하는 방법이 있습니다.

주요 기능:

- 브레이크포인트 : 특정 코드 라인에 멈춰서 실행을 일시 정지시킵니다.

- 스텝 오버/인 : 코드를 한 줄씩 실행하며 변수의 값을 확인합니다.

- 변수 검사 : 실행이 멈춘 시점에서 현재 변수들의 값을 실시간으로 확인합니다.
이러한 기능들은 오류의 원인을 추적하는 데 매우 효과적입니다.
--------------------------------------------------------------------------------
● sqids
sqids는 숫자 배열을 짧고 읽기 쉬운 문자열 ID로 변환해 주는 라이브러리입니다.
URL이나 고유 식별자를 만들 때 주로 사용됩니다. 일반적인 Base64 인코딩과 달리,
sqids로 생성된 문자열은 원래의 숫자와 순서가 관련이 없어 외부에 노출될 때
데이터의 노출을 줄일 수 있습니다.

특징:

- 가독성: 사람이 읽고 입력하기 쉬운 짧은 문자열을 생성합니다.

- 비순차성: 원래의 숫자 순서와 생성된 문자열의 순서가 무관합니다.

- 커스텀 가능: 고유한 문자 집합을 사용하여 ID를 생성할 수 있습니다.